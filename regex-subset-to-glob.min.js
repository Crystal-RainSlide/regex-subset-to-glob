const getSegments=t=>{const e=t.split(""),r=[];let i=!0;function n(t){r.push(t),i=!1}function s(t){r[r.length-1]+=t}function o(t){s(t),i=!0}let a=-1,l=0;for(;l<e.length;l++){const t=e[l];switch(t){case"[":if(-1!==a)throw"missing ] at "+l.toString();a=l,n("[");break;case"]":if(-1===a)throw"missing [ at "+l.toString();if(a===l-1)throw"empty bracket at "+(l-1).toString();a=-1,o("]");break;default:!0===i?n(t):s(t)}}if(-1!==a)throw"missing ] at "+l.toString()+" (the end)";return r},replaceWildcards=t=>t.startsWith("[")?t:t.replaceAll(".*","*").replaceAll(".","?"),regexSubsetToGlob=t=>getSegments(t).map(replaceWildcards).join("");export default regexSubsetToGlob;